
module aluVectorial( input logic [31:0] A, B,
					 input logic [2:0] C 
					 output logic [31:0] R,
					 output logic [3:0] F //Overflow,carry,zero,negative)
	logic [32:0] result
	
	always @(*) begin 

		case(C)
			3'b000: result = A+B;
			3'b001: result = A-B;
			3'b010: result = A&B;
			3'b011: result = A|B;
			3'b100: result = A*B;

		endcase 


		F[3]=result[31]; //Negative
		F[1]=result[32]; //Carry
		
		if(result==0) //Zero
			F[2]=1;
		else
			F[2]=0;

	end

endmodule : aluVectorial